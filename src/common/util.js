/*
 * @class   公共方法
 * @author  冯金庆
 * @date    19.04.02
 */

import {Toast, MessageBox, Indicator} from 'mint-ui'

/***
 * 金额格式化（过滤器中用到）
 * @param value
 * @param isPenny  value是否分位数，true为是
 * @param unit 单位，是否带分位，默认带两个0 （只针对整数）
 * @returns {*}
 */
export const moneyHandler = (value, isPenny, unit = true) => {
  console.log('extt ', value, isPenny, unit)
  value = value || 0
  value = Number(value)
  if (!isPenny) { //以分做单位
    value = value * 100
  }
  value = Math.round(value) / 100
  if(unit) {
    let arrVal = value ? (value + '').split('.') : ['0'],
      pattern = /(?=((?!\b)\d{3})+$)/g,
      arrResetVal = []
    arrVal[1] = arrVal[1] || '00'
    if (arrVal[1].length < 2) arrVal[1] += '0'
    arrResetVal = [arrVal[0].replace(pattern, ','), '.', arrVal[1]]
    return arrResetVal.join('')
  }else {
    return value
  }
}
export default {
  /**
   * 设置title
   * @param title
   */
  setWxTitle(title){
    document.title = title
    console.log('title变更为：',document.title)
    //#region 解决微信浏览器不检测change title的bug
    const oFrame = document.createElement('iframe')
    oFrame.style.cssText = 'display: none; width: 0; height: 0;'
    oFrame.src = 'https://pf.winbons.com/favicon.ico' + '?' + +new Date()
    const listener = () => {
      setTimeout(() => {
        oFrame.removeEventListener('load', listener);
        setTimeout(() => {
          document.body.removeChild(oFrame);
        }, 0)
      }, 0)
    }
    oFrame.addEventListener('load', listener)
    document.body.appendChild(oFrame)
    //#endregion

  },

  /**
   * 倒计时
   * @param next
   * 使用例子
   *    this.$util.countDown(5,(iCount)=>{console.log('测试倒计时',iCount)},()=>{console.log('测试倒计时结束')})
   */
  countDown(iCount=60,next = function () {},callFn){
    function countDownNum(callFnIn){
      setTimeout(function () {
        iCount--
        if(iCount > 0){
          countDownNum(callFnIn)
        }else {
          typeof callFnIn === "function"&& callFnIn()
          console.log(iCount)
        }
        next(iCount)
      }, 1000)
    }
    countDownNum(callFn)
  },
  /**
   * 筛选数组，通过id对应field，只应用于包含id和字段的数值
   * @param arr 源对象
   * @param id 键
   * * @param field 字段 默认name
   * let name = filterArrFieldById(obj, id)
   * let field = filterArrFieldById(obj, id,field)
   * @returns 目标对象
   */
  filterArrFieldById(arr,id,field){
    let name
    !field&&(field='name')
    arr.forEach((value, index)=>{
      if(value.id == id)
        name= value[field]
    })
    return name
  },
  /**
   * 手机号码格式验证
   * @param val
   * @param callback
   * @returns {boolean}
   */
  checkMobile(val, callback){
    let checkResult = !/^1[0-9]{9}\d$/.test(val)
    if(checkResult){
      if(callback && typeof callback == 'function'){
        callback()
      }else {
        Toast({
          message: '手机号码格式不正确',
          position: 'top'
        })
      }
    }
    return checkResult
  },

  /***
   * 校验身份证
   * @param val
   * @return {boolean}
   */
  checkID (val) {
    if(this.checkCode(val)) {
      var date = val.substring(6,14);
      if(this.checkDate(date)) {
        if(this.checkProv(val.substring(0,2))) {
          return true;
        }
      }
    }
    return false;
  },
  checkCode(val) {
    var p = /^[1-9]\d{5}(18|19|20)\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$/;
    var factor = [ 7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2 ];
    var parity = [ 1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2 ];
    var code = val.substring(17);
    if(p.test(val)) {
      var sum = 0;
      for(var i=0;i<17;i++) {
        sum += val[i]*factor[i];
      }
      if(parity[sum % 11] == code.toUpperCase()) {
        return true;
      }
    }
    return false;
  },
  checkDate(val) {
    var pattern = /^(18|19|20)\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)$/;
    if(pattern.test(val)) {
      var year = val.substring(0, 4);
      var month = val.substring(4, 6);
      var date = val.substring(6, 8);
      var date2 = new Date(year+"-"+month+"-"+date);
      if(date2 && date2.getMonth() == (parseInt(month) - 1)) {
        return true;
      }
    }
    return false;
  },
  checkProv(val){
    var pattern = /^[1-9][0-9]/;
    var provs = {11:"北京",12:"天津",13:"河北",14:"山西",15:"内蒙古",21:"辽宁",22:"吉林",23:"黑龙江 ",
      31:"上海",32:"江苏",33:"浙江",34:"安徽",35:"福建",36:"江西",37:"山东",41:"河南",42:"湖北 ",43:"湖南",
      44:"广东",45:"广西",46:"海南",50:"重庆",51:"四川",52:"贵州",53:"云南",54:"西藏 ",61:"陕西",62:"甘肃",
      63:"青海",64:"宁夏",65:"新疆",71:"台湾",81:"香港",82:"澳门"};
    if(pattern.test(val)) {
      if(provs[val]) {
        return true;
      }
    }
    return false;
  },

  /**
   * 邮箱格式验证
   * @param val
   * @param callback
   * @returns {boolean}
   */
  checkEmail(val, callback){
    let checkResult = !/^(\w-*\.*)+@(\w-?)+(\.\w{2,})+$/.test(val)
    if(checkResult){
      if(callback && typeof callback == 'function'){
        callback()
      }else {
        Toast({
          message: '邮箱格式不正确',
          position: 'top'
        })
      }
    }
    return checkResult
  },

  /**
   * 检查必填项
   * @param oData
   * @param requiredKey
   * @returns {boolean}
   */
  checkRequired(oData, requiredKey){
    for(let key in requiredKey){
      if(!oData[key]){
        Toast({
          message: requiredKey[key] + '不可为空',
          position: 'top'
        })
        return true
      }
    }
    return false
  },

  /**
   * 背景
   */
  bg: {
    show (){
      let oEl = document.getElementById('modalBg')
      if(oEl){
        this.$el = oEl
      }else {
        this.$el = document.createElement('div')
        this.$el.className = 'modal-bg'
        this.$el.id = 'modalBg'
        document.querySelector('.page').appendChild(this.$el)
      }
      document.querySelector('body').style.overflow = 'hidden'
      document.querySelector('html').style.overflow = 'hidden'
      return this.$el
    },
    hide (){
      document.querySelector('html').style.overflow = ''
      document.querySelector('body').style.overflow = ''
      if (this.$el) {
        this.$el.parentNode && this.$el.parentNode.removeChild(this.$el)
        return this.$el
      }
    }
  },

  /**
   * 是否空对象
   * @param obj
   * @returns {boolean}
   */
  isEmptyObject(obj){
    if(typeof obj != 'object') return true
    for(let key in obj){
      return false
    }
    return true
  },

  /**
   * 获取字符串首字母
   * @param str
   */
  String2En: {
    strChineseFirstPY: "",
    get(str){
      if (typeof(str) != "string")
        throw new Error(-1, "函数makePy需要字符串类型参数!");
      var arrResult = new Array(); //保存中间结果的数组
      for (var i = 0, len = str.length; i < len; i++) {
        //获得unicode码
        var ch = str.charAt(i);
        //检查该unicode码是否在处理范围之内,在则返回该码对映汉字的拼音首字母,不在则调用其它函数处理
        arrResult.push(this.checkCh(ch));
      }
      //处理arrResult,返回所有可能的拼音首字母串数组
      return this.mkRslt(arrResult);
    },
    checkCh(ch){
      var uni = ch.charCodeAt(0);
      //如果不在汉字处理范围之内,返回原字符,也可以调用自己的处理函数
      if (uni > 40869 || uni < 19968)
        return ch; //dealWithOthers(ch);
      //直接在strChineseFirstPY字符串中找对应的首字母
      return (this.strChineseFirstPY.charAt(uni - 19968));
    },
    mkRslt(arr){
      var arrRslt = [""];
      for (var i = 0, len = arr.length; i < len; i++) {
        var str = arr[i];
        var strlen = str.length;
        if (strlen == 1) {
          for (var k = 0; k < arrRslt.length; k++) {
            arrRslt[k] += str;
          }
        } else {
          var tmpArr = arrRslt.slice(0);
          arrRslt = [];
          for (k = 0; k < strlen; k++) {
            //复制一个相同的arrRslt
            var tmp = tmpArr.slice(0);
            //把当前字符str[k]添加到每个元素末尾
            for (var j = 0; j < tmp.length; j++) {
              tmp[j] += str.charAt(k);
            }
            //把复制并修改后的数组连接到arrRslt上
            arrRslt = arrRslt.concat(tmp);
          }
        }
      }
      return arrRslt;
    }
  },

  /**
   * 浏览器标识返回
   * @returns {boolean}
   */
  thisBrowser(){

    let bwTag = false

    this.UA = navigator.userAgent.toLowerCase()

    if (this.UA.match(/MicroMessenger/i) == "micromessenger") {
      //微信客户端
      bwTag = 'wx'
    } else if (this.UA.indexOf("alipay") != -1) {
      bwTag = 'alipay'
    }
    return bwTag
  },
  /**
   * 浏览器标识返回
   * @returns {boolean}or{string}
   */
  thisBrowserByPhone(){
    let device  = false
    let _UA = navigator.userAgent
    // console.log('ua==',_UA)
    if (_UA.indexOf('Android') > -1 || _UA.indexOf('Linux') > -1 || _UA.indexOf('Adr') > -1) {//安卓手机
      device  = "Android";
    } else if (_UA.indexOf('iPhone') > -1) {//苹果手机
      device  = "iPhone";
    } else if (_UA.indexOf('Windows Phone') > -1) {//winphone手机
      device  = "WindowsPhone";
    }
    return device
  },
  /**
   * 关闭窗口
   */
  closeWindow(){
    if(this.thisBrowser() === 'wx'){
      WeixinJSBridge && WeixinJSBridge.call('closeWindow')
    }else if(this.thisBrowser() === 'alipay'){
      AlipayJSBridge && AlipayJSBridge.call('closeWebview')
    }
  },

  isArray(a){
    return this.isClass(a)  === 'Array'
  },

  isObject(a){
    return this.isClass(a)  === 'Object'
  },

  isPlainObject(a){
    if(this.isObject(a)){
      return JSON.stringify(a) === "{}"
    }else{
      return false
    }
  },

  isFunction(a){
    return this.isClass(a)  === 'Function'
  },

  isString(a){
    return this.isClass(a)  === 'String'
  },

  //判断对象的数据类型
  isClass(o){
    if(o===null) return "Null";
    if(o===undefined) return "Undefined";
    return Object.prototype.toString.call(o).slice(8,-1);
  },

  /**
   * 数组与对象的深度拷贝
   * @param object
   * @returns {*}
   */
  copy(object){
    let that = this
    function deepClone(obj){
      let result;
      let oClass=that.isClass(obj);
      if(oClass==="Object"){
        result={};
      }else if(oClass==="Array"){
        result=[];
      }else{
        return obj;
      }
      for(var key in obj){
        var copy=obj[key];
        if(that.isClass(copy)=="Object"){
          result[key]= that.copy(copy);//递归调用
        }else if(that.isClass(copy)=="Array"){
          result[key]=that.copy(copy);
        }else{
          result[key]=obj[key];
        }
      }
      return result;
    }
    return deepClone( object )
  },

  /***
   * 金额格式化
   * @param s
   * @param n
   * @param g
   * @returns {string}
   */
  formatMoney(s, n, g) {
    n = n >= 0 && n <= 20 ? n : 2;
    s = parseFloat((s + "").replace(/[^\d\.-]/g, "")).toFixed(n) + "";
    var l = s.split(".")[0].split("").reverse(),
      r = s.split(".")[1] || 0,
      t = "",
      min = '';
    for (var i = 0, len = l.length; i < len; i++) {
      t += l[i] + ((i + 1) % 3 == 0 && (i + 1) != len ? "," : "");
    }

    if (parseInt(r) != 0 || g) {
      min = "." + r;
    }
    return t.split("").reverse().join("") + min;
  },
  moneyHandler,

  /**
   * 千分位格式化
   * @param num
   * @returns {string}
   */
  formatThousandth(num) {
    return (+num || 0).toString().replace(/^-?\d+/g, m => m.replace(/(?=(?!\b)(\d{3})+$)/g, ','))
  },

  /**
   * 容量格式化
   * @param num
   * @param digits
   * @returns {string}
   */
  formatCapacity(num, digits) {
    const si = [
      { value: 1E18, symbol: 'E' },
      { value: 1E15, symbol: 'P' },
      { value: 1E12, symbol: 'T' },
      { value: 1E9, symbol: 'G' },
      { value: 1E6, symbol: 'M' },
      { value: 1E3, symbol: 'k' }
    ]
    for (let i = 0; i < si.length; i++) {
      if (num >= si[i].value) {
        return (num / si[i].value + 0.1).toFixed(digits).replace(/\.0+$|(\.[0-9]*[1-9])0+$/, '$1') + si[i].symbol
      }
    }
    return num.toString()
  },

  /**
   * 存储sessionStorage
   */
  setStore(name, content) {
    if (!name) return;
    if (typeof content !== 'string') {
      content = JSON.stringify(content);
    }
    window.sessionStorage.setItem(name, content);
  },

  /**
   * 获取sessionStorage
   */
  getStore(name) {
    if (!name) return;
    return window.sessionStorage.getItem(name);
  },

  /**
   * 删除sessionStorage
   */
  removeStore(name) {
    if (!name) return;
    window.sessionStorage.removeItem(name);
  },

  /**
   * 获取style样式
   */
  getStyle(element, attr, NumberMode = 'int') {
    let target;
    // scrollTop 获取方式不同，没有它不属于style，而且只有document.body才能用
    if (attr === 'scrollTop') {
      target = element.scrollTop;
    } else if (element.currentStyle) {
      target = element.currentStyle[attr];
    } else {
      target = document.defaultView.getComputedStyle(element, null)[attr];
    }
    //在获取 opactiy 时需要获取小数 parseFloat
    return NumberMode == 'float' ? parseFloat(target) : parseInt(target);
  },

  /**
   * 页面到达底部，加载更多
   */
  loadMore(element, callback) {
    let windowHeight = window.screen.height;
    let height;
    let setTop;
    let paddingBottom;
    let marginBottom;
    let requestFrame;
    let oldScrollTop;

    document.body.addEventListener('scroll', () => {
      loadMore();
    }, false)
    //运动开始时获取元素 高度 和 offseTop, pading, margin
    element.addEventListener('touchstart', () => {
      height = element.offsetHeight;
      setTop = element.offsetTop;
      paddingBottom = getStyle(element, 'paddingBottom');
      marginBottom = getStyle(element, 'marginBottom');
    }, {passive: true})

    //运动过程中保持监听 scrollTop 的值判断是否到达底部
    element.addEventListener('touchmove', () => {
      loadMore();
    }, {passive: true})

    //运动结束时判断是否有惯性运动，惯性运动结束判断是非到达底部
    element.addEventListener('touchend', () => {
      oldScrollTop = document.body.scrollTop;
      moveEnd();
    }, {passive: true})

    const moveEnd = () => {
      requestFrame = requestAnimationFrame(() => {
        if (document.body.scrollTop != oldScrollTop) {
          oldScrollTop = document.body.scrollTop;
          loadMore();
          moveEnd();
        } else {
          cancelAnimationFrame(requestFrame);
          //为了防止鼠标抬起时已经渲染好数据从而导致重获取数据，应该重新获取dom高度
          height = element.offsetHeight;
          loadMore();
        }
      })
    }

    const loadMore = () => {
      if (document.body.scrollTop + windowHeight >= height + setTop + paddingBottom + marginBottom) {
        callback();
      }
    }
  },

  /**
   * 显示返回顶部按钮，开始、结束、运动 三个过程中调用函数判断是否达到目标点
   */
  showBack(callback) {
    let requestFrame;
    let oldScrollTop;

    document.addEventListener('scroll', () => {
      showBackFun();
    }, false)
    document.addEventListener('touchstart', () => {
      showBackFun();
    }, {passive: true})

    document.addEventListener('touchmove', () => {
      showBackFun();
    }, {passive: true})

    document.addEventListener('touchend', () => {
      oldScrollTop = document.body.scrollTop;
      moveEnd();
    }, {passive: true})

    const moveEnd = () => {
      requestFrame = requestAnimationFrame(() => {
        if (document.body.scrollTop != oldScrollTop) {
          oldScrollTop = document.body.scrollTop;
          moveEnd();
        } else {
          cancelAnimationFrame(requestFrame);
        }
        showBackFun();
      })
    }

    //判断是否达到目标点
    const showBackFun = () => {
      if (document.body.scrollTop > 500) {
        callback(true);
      } else {
        callback(false);
      }
    }
  },

  /**
   * 运动效果
   * @param {HTMLElement} element   运动对象，必选
   * @param {JSON}        target    属性：目标值，必选
   * @param {number}      duration  运动时间，可选
   * @param {string}      mode      运动模式，可选
   * @param {function}    callback  可选，回调函数，链式动画
   */
  animate(element, target, duration = 400, mode = 'ease-out', callback) {
    clearInterval(element.timer);

    //判断不同参数的情况
    if (duration instanceof Function) {
      callback = duration;
      duration = 400;
    } else if (duration instanceof String) {
      mode = duration;
      duration = 400;
    }

    //判断不同参数的情况
    if (mode instanceof Function) {
      callback = mode;
      mode = 'ease-out';
    }

    //获取dom样式
    const attrStyle = attr => {
      if (attr === "opacity") {
        return Math.round(getStyle(element, attr, 'float') * 100);
      } else {
        return getStyle(element, attr);
      }
    }
    //根字体大小，需要从此将 rem 改成 px 进行运算
    const rootSize = parseFloat(document.documentElement.style.fontSize);

    const unit = {};
    const initState = {};

    //获取目标属性单位和初始样式值
    Object.keys(target).forEach(attr => {
      if (/[^\d^\.]+/gi.test(target[attr])) {
        unit[attr] = target[attr].match(/[^\d^\.]+/gi)[0] || 'px';
      } else {
        unit[attr] = 'px';
      }
      initState[attr] = attrStyle(attr);
    });

    //去掉传入的后缀单位
    Object.keys(target).forEach(attr => {
      if (unit[attr] == 'rem') {
        target[attr] = Math.ceil(parseInt(target[attr]) * rootSize);
      } else {
        target[attr] = parseInt(target[attr]);
      }
    });


    let flag = true; //假设所有运动到达终点
    const remberSpeed = {};//记录上一个速度值,在ease-in模式下需要用到
    element.timer = setInterval(() => {
      Object.keys(target).forEach(attr => {
        let iSpeed = 0;  //步长
        let status = false; //是否仍需运动
        let iCurrent = attrStyle(attr) || 0; //当前元素属性址
        let speedBase = 0; //目标点需要减去的基础值，三种运动状态的值都不同
        let intervalTime; //将目标值分为多少步执行，数值越大，步长越小，运动时间越长
        switch (mode) {
          case 'ease-out':
            speedBase = iCurrent;
            intervalTime = duration * 5 / 400;
            break;
          case 'linear':
            speedBase = initState[attr];
            intervalTime = duration * 20 / 400;
            break;
          case 'ease-in':
            let oldspeed = remberSpeed[attr] || 0;
            iSpeed = oldspeed + (target[attr] - initState[attr]) / duration;
            remberSpeed[attr] = iSpeed
            break;
          default:
            speedBase = iCurrent;
            intervalTime = duration * 5 / 400;
        }
        if (mode !== 'ease-in') {
          iSpeed = (target[attr] - speedBase) / intervalTime;
          iSpeed = iSpeed > 0 ? Math.ceil(iSpeed) : Math.floor(iSpeed);
        }
        //判断是否达步长之内的误差距离，如果到达说明到达目标点
        switch (mode) {
          case 'ease-out':
            status = iCurrent != target[attr];
            break;
          case 'linear':
            status = Math.abs(Math.abs(iCurrent) - Math.abs(target[attr])) > Math.abs(iSpeed);
            break;
          case 'ease-in':
            status = Math.abs(Math.abs(iCurrent) - Math.abs(target[attr])) > Math.abs(iSpeed);
            break;
          default:
            status = iCurrent != target[attr];
        }

        if (status) {
          flag = false;
          //opacity 和 scrollTop 需要特殊处理
          if (attr === "opacity") {
            element.style.filter = "alpha(opacity:" + (iCurrent + iSpeed) + ")";
            element.style.opacity = (iCurrent + iSpeed) / 100;
          } else if (attr === 'scrollTop') {
            element.scrollTop = iCurrent + iSpeed;
          } else {
            element.style[attr] = iCurrent + iSpeed + 'px';
          }
        } else {
          flag = true;
        }

        if (flag) {
          clearInterval(element.timer);
          if (callback) {
            callback();
          }
        }
      })
    }, 20);
  }
}
